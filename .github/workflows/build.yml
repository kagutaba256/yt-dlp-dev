name: Build

on:
  push:
    branches:
      - release

jobs:
  build_unix:
    runs-on: ubuntu-latest

    outputs:
      ytdlp_version: ${{ steps.bump_version.outputs.ytdlp_version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha256_unix: ${{ steps.sha256_file.outputs.sha256_unix }}
      sha512_unix: ${{ steps.sha512_file.outputs.sha512_unix }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
    - name: Install packages
      run: sudo apt-get -y install zip pandoc man
    - name: Bump version
      id: bump_version
      run: python devscripts/update-version.py
    - name: Print version
      run: echo "${{ steps.bump_version.outputs.ytdlp_version }}"
      id: version
    - name: make issuetemplates
      run: make issuetemplates
    - name: commit version update
      run: |
        git config --global user.email "none@example.com"
        git config --global user.name "yt-dlp"
        git pull
        git add -u
        git commit -m "[version] update :ci skip all"
        git checkout master
        git pull
        git merge release
        git push origin master
    - name: get changelog
      id: get_changelog
      run: |
        changelog=$(cat Changelog.md | grep -oPz '(?s)### TEST.*?\n\n\n')
        echo "changelog<<EOF" >> $GITHUB_ENV
        echo "$changelog" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    - name: print changelog
      run: echo "${{ steps.get_changelog.outputs.changelog }}"
    - name: Run Make
      run: make all tar
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.ytdlp_version }}
        release_name: yt-dlp ${{ steps.bump_version.outputs.ytdlp_version }}
        body: |
          Changelog:
          ${{ env.changelog }}
        draft: false
        prerelease: false
    - name: Upload yt-dlp Unix binary
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./yt-dlp
        asset_name: yt-dlp
        asset_content_type: application/octet-stream
